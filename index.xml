<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MathBugs</title>
    <link>https://st3inum.github.io/</link>
    <description>Recent content on MathBugs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 27 Apr 2021 19:54:10 +0600</lastBuildDate><atom:link href="https://st3inum.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Fraction and Sequence - UVA 13041</title>
      <link>https://st3inum.github.io/posts/uva-13041/</link>
      <pubDate>Tue, 27 Apr 2021 19:54:10 +0600</pubDate>
      
      <guid>https://st3inum.github.io/posts/uva-13041/</guid>
      <description>How many triplet $(a,b,c)$ are there such that $0\le a,b,c \le L$ and $\sum_{x=0}^{\infty}{(ax^{2}+bx+c)\times (\frac{1}{10})^{x+1}} = \frac{p}{q}$ , for given $p,q,L$.
Inside Math: Suppose, $A = \sum_{x=0}^{\infty}{ax^2\times (\frac{1}{10})^{x+1}}$
$B = \sum_{x=0}^{\infty}{bx\times (\frac{1}{10})^{x+1}}$
$C = \sum_{x=0}^{\infty}{c\times (\frac{1}{10})^{x+1}}$
Hence, $\sum_{x=0}^{\infty}{(ax^{2}+bx+c)\times (\frac{1}{10})^{x+1}} = A+B+C$
Now, we know(Actually we don&amp;rsquo;t know this, we have to prove this. We&amp;rsquo;ll try to prove this in some other section) that:
$\sum_{x=0}^{\infty}{x^{2}r^{x+1}} = \frac{r^{2}(r+1)}{(r-1)^{3}} \tag{1}$
$\sum_{x=0}^{\infty}{xr^{x+1}} = \frac{r^{2}}{(r-1)^{2}} \tag{2}$</description>
      <content>&lt;p&gt;How many triplet $(a,b,c)$ are there such that $0\le a,b,c \le L$ and $\sum_{x=0}^{\infty}{(ax^{2}+bx+c)\times (\frac{1}{10})^{x+1}} = \frac{p}{q}$ , for given $p,q,L$.&lt;/p&gt;
&lt;h2 id=&#34;inside-math&#34;&gt;Inside Math:&lt;/h2&gt;
&lt;p&gt;Suppose,
$A = \sum_{x=0}^{\infty}{ax^2\times (\frac{1}{10})^{x+1}}$&lt;/p&gt;
&lt;p&gt;$B = \sum_{x=0}^{\infty}{bx\times (\frac{1}{10})^{x+1}}$&lt;/p&gt;
&lt;p&gt;$C = \sum_{x=0}^{\infty}{c\times (\frac{1}{10})^{x+1}}$&lt;/p&gt;
&lt;p&gt;Hence, $\sum_{x=0}^{\infty}{(ax^{2}+bx+c)\times (\frac{1}{10})^{x+1}} = A+B+C$&lt;/p&gt;
&lt;p&gt;Now, we know(Actually we don&amp;rsquo;t know this, we have to prove this. We&amp;rsquo;ll try to prove this in some other section) that:&lt;/p&gt;
&lt;p&gt;$\sum_{x=0}^{\infty}{x^{2}r^{x+1}} = \frac{r^{2}(r+1)}{(r-1)^{3}} \tag{1}$&lt;/p&gt;
&lt;p&gt;$\sum_{x=0}^{\infty}{xr^{x+1}} = \frac{r^{2}}{(r-1)^{2}} \tag{2}$&lt;/p&gt;
&lt;p&gt;$\sum_{x=0}^{\infty}{r^{x+1}} = \frac{r}{(r-1)} \tag{3}$&lt;/p&gt;
&lt;p&gt;from the above $(1)$, $(2)$ and $(3)$ we can easily find, $A = \frac{11}{3^{6}}$, $B = \frac{1}{3^{4}}$, $C = \frac{1}{3^{2}}$&lt;/p&gt;
&lt;p&gt;Hence :
\begin{align}
\sum_{x=0}^{\infty}{(ax^{2}+bx+c)\times (\frac{1}{10})^{x+1}} &amp;amp;= A+B+C \newline
\sum_{x=0}^{\infty}{(ax^{2}+bx+c)\times (\frac{1}{10})^{x+1}} &amp;amp;= a\times \frac{11}{3^{6}}+ b\times \frac{1}{3^{4}} + c\times \frac{1}{3^{2}} = \frac{p}{q} \newline
\frac{11a+9b+81c}{3^{6}} &amp;amp;= \frac{p}{q} \newline
11a+9b+81c &amp;amp;= \frac{p\times 3^{6} }{q} \newline
11a+9b &amp;amp;= \frac{p\times 3^{6}}{q} - 81c = r \text{ [Here } q \text{ must be a divisor of }3^6\text{]} \newline
\end{align}&lt;/p&gt;
&lt;p&gt;Now , $11a+9b=r$ is a linear diophantine equation.&lt;/p&gt;
&lt;p&gt;By solving this diophantine equation we will get: $a = 9x-4r$ and $b=5r-11x$ for any integer $x$.&lt;/p&gt;
&lt;p&gt;Now ,
\begin{align}
0\le a \le L \newline
0\le 9x-4r \le L \newline
\frac{4r}{9} \le x \le \frac{L+4r}{9}
\end{align}
Hence , $x \in [\lceil \frac{4r}{9} \rceil , \lfloor \frac{L+4r}{9} \rfloor]$&lt;/p&gt;
&lt;p&gt;Again ,
\begin{align}
0\le b \le L \newline
0\le 5r-11x \le L \newline
\frac{5r-L}{11} \le x \le \frac{5r}{11}
\end{align}
Hence , $x \in [\lceil \frac{5r-L}{11} \rceil , \lfloor \frac{5r}{11} \rfloor]$&lt;/p&gt;
&lt;p&gt;Hence , actual value of $x$ will be in range $[\lceil \frac{4r}{9} \rceil , \lfloor \frac{L+4r}{9} \rfloor] \cap [\lceil \frac{5r-L}{11} \rceil , \lfloor \frac{5r}{11} \rfloor] = [max(\lceil \frac{4r}{9} \rceil , \lceil \frac{5r-L}{11} \rceil) , min(\lfloor \frac{L+4r}{9} \rfloor , \lfloor \frac{5r}{11} \rfloor)]$&lt;/p&gt;
&lt;h2 id=&#34;solution&#34;&gt;Solution:&lt;/h2&gt;
&lt;p&gt;Now we will just iterate over $c \in [0,L]$ , then for each $r = \frac{p\times 3^{6}}{q} - 81c$ we will add $max(min(\lfloor \frac{L+4r}{9} \rfloor , \lfloor \frac{5r}{11} \rfloor) - max(\lceil \frac{4r}{9} \rceil , \lceil \frac{5r-L}{11} \rceil)+1, 0)$ to our answer.&lt;/p&gt;



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;1&#34; type=&#34;checkbox&#34;  /&gt;
    &lt;label for=&#34;1&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;cpp&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__title&#34;&gt;Fraction and Sequence&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-cpp&#34; &gt;&lt;code id=&#34;code1&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


&lt;script type=&#34;text/javascript&#34;&gt;
  var xmlHttp = new XMLHttpRequest();
    xmlHttp.open( &#34;GET&#34;, &#39;https:\/\/raw.githubusercontent.com\/st3inum\/blog\/master\/codes\/uva\/13041.cpp&#39;, false ); 
    xmlHttp.send( null );
    var div = document.getElementById(&#39;code1&#39;);
    div.textContent = &#39;\n&#39;+xmlHttp.responseText;
    
    
&lt;/script&gt;


&lt;p&gt;Actually, it is not a good solution, we can optimize it furthermore. But it will pass the problem.&lt;/p&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://onlinejudge.org/external/130/13041.pdf&#34;&gt;UVA - 13041&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://algo.codemarshal.org/contests/sustiupc2015/problems/H&#34;&gt;Fraction and Sequence : SUST IUPC 2015&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Diophantine_equation&#34;&gt;Diophantine Equation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>Primes or Palindromes? - Codeforces - 568a</title>
      <link>https://st3inum.github.io/posts/codeforces-568a/</link>
      <pubDate>Tue, 27 Apr 2021 01:46:42 +0600</pubDate>
      
      <guid>https://st3inum.github.io/posts/codeforces-568a/</guid>
      <description>$\pi(n) = \text{ number of prime number smaller than or equal to n}$ . $rub(n) = \text{ number of palindromic number smaller than or equal to n}$ .  For a given $p$ and $q$ find maximum such $n$ so that, $\pi(n)\le \frac{p}{q}\times rub(n)$
Inside Math:  $\pi(n) \approx \frac{n}{ln(n)}$ [Prime number approximation] $rub(n) \approx 2\sqrt{n}$ maximum value of $\frac{p}{q} = 42$  Hence , \begin{align} \pi(n) &amp;amp;\le \frac{p}{q}\times rub(n) \newline \Longrightarrow \frac{n}{ln(n)} &amp;amp;\le 42 \times 2\sqrt{n} \newline \Longrightarrow \frac{\sqrt{n}}{ln(n)} &amp;amp;\le 84 \newline \Longrightarrow n_{max} &amp;amp;\approx \boxed{1415344} \newline \end{align}</description>
      <content>&lt;ul&gt;
&lt;li&gt;$\pi(n) = \text{ number of prime number smaller than or equal to n}$ .&lt;/li&gt;
&lt;li&gt;$rub(n) = \text{ number of palindromic number smaller than or equal to n}$ .&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For a given $p$ and $q$ find maximum such $n$ so that, $\pi(n)\le \frac{p}{q}\times rub(n)$&lt;/p&gt;
&lt;h2 id=&#34;inside-math&#34;&gt;Inside Math:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;$\pi(n) \approx \frac{n}{ln(n)}$ [Prime number approximation]&lt;/li&gt;
&lt;li&gt;$rub(n) \approx 2\sqrt{n}$&lt;/li&gt;
&lt;li&gt;maximum value of $\frac{p}{q} = 42$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hence ,
\begin{align}
\pi(n) &amp;amp;\le \frac{p}{q}\times rub(n) \newline
\Longrightarrow \frac{n}{ln(n)} &amp;amp;\le 42 \times 2\sqrt{n} \newline
\Longrightarrow \frac{\sqrt{n}}{ln(n)} &amp;amp;\le 84 \newline
\Longrightarrow n_{max} &amp;amp;\approx \boxed{1415344} \newline
\end{align}&lt;/p&gt;
&lt;p&gt;Now we can just precalculate all prime,and the palindrome in the range $[0,n_{max}]$, then find out maximum such $n$ for which $\pi(n) \le \frac{p}{q}\times rub(n)$.&lt;/p&gt;



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;1&#34; type=&#34;checkbox&#34;  /&gt;
    &lt;label for=&#34;1&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;cpp&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__title&#34;&gt;Primes or Palindromes?&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-cpp&#34; &gt;&lt;code id=&#34;code1&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


&lt;script type=&#34;text/javascript&#34;&gt;
  var xmlHttp = new XMLHttpRequest();
    xmlHttp.open( &#34;GET&#34;, &#39;https:\/\/raw.githubusercontent.com\/st3inum\/blog\/master\/codes\/codeforces\/568a.cpp&#39;, false ); 
    xmlHttp.send( null );
    var div = document.getElementById(&#39;code1&#39;);
    div.textContent = &#39;\n&#39;+xmlHttp.responseText;
    
    
&lt;/script&gt;


&lt;h2 id=&#34;reference&#34;&gt;Reference:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://codeforces.com/contest/568/problem/A&#34;&gt;Codeforces - 568A&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mathworld.wolfram.com/PrimeCountingFunction.html&#34;&gt;Prime number approximation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>Complex Tashreef - Toph</title>
      <link>https://st3inum.github.io/posts/toph-complex-tashreef/</link>
      <pubDate>Mon, 26 Apr 2021 01:06:15 +0600</pubDate>
      
      <guid>https://st3inum.github.io/posts/toph-complex-tashreef/</guid>
      <description>Statement: In this problem you are asked to calculate : $\sum_{i=L}^{R}{\sum_{j=0}^{i}{[\binom{i}{j} \text{ (mod 2)} \equiv 0]}}$ , for given $L$ and $R$.
Inside Math: From the lucas&#39; theorem we can state that, $\sum_{j=0}^{i}{[\binom{i}{j} \text{ (mod 2)}\equiv 1]} = 2^{f(i)}$ . [$f(i) = \text{ number of one in binary representation of } i$]
Suppose , $S(x) = \sum_{i=0}^{x}{\sum_{j=0}^{i}{[\binom{i}{j} \text{ (mod 2)} \equiv 0]}}$ . Hence , our answer will be $S(R)-S(L-1)$</description>
      <content>&lt;h2 id=&#34;statement&#34;&gt;Statement:&lt;/h2&gt;
&lt;p&gt;In this problem you are asked to calculate : $\sum_{i=L}^{R}{\sum_{j=0}^{i}{[\binom{i}{j} \text{ (mod 2)} \equiv 0]}}$ , for given $L$ and $R$.&lt;/p&gt;
&lt;h2 id=&#34;inside-math&#34;&gt;Inside Math:&lt;/h2&gt;
&lt;p&gt;From the lucas&#39; theorem we can state that, $\sum_{j=0}^{i}{[\binom{i}{j} \text{ (mod 2)}\equiv 1]} = 2^{f(i)}$ . [$f(i) = \text{ number of one in binary representation of } i$]&lt;/p&gt;
&lt;p&gt;Suppose , $S(x) = \sum_{i=0}^{x}{\sum_{j=0}^{i}{[\binom{i}{j} \text{ (mod 2)} \equiv 0]}}$ . Hence , our answer will be $S(R)-S(L-1)$&lt;/p&gt;
&lt;p&gt;Now,
\begin{align}
S(x) &amp;amp; = \sum_{i=0}^{x}{\sum_{j=0}^{i}{[\binom{i}{j} \text{ (mod 2)} \equiv 0]}} \newline
&amp;amp; = \sum_{i=0}^{x}{(i+1) - 2^{f(i)}} \newline
&amp;amp; = \sum_{i=0}^{x}{(i+1)} - \sum_{i=0}^{x}{2^{f(i)}} \newline
&amp;amp; = \frac{(i+1)\times (i+2)}{2} - \sum_{i=0}^{x}{2^{f(i)}} \newline
\end{align}&lt;/p&gt;
&lt;p&gt;Now the challenge is to calculate $\sum_{i=0}^{x}{2^{f(i)}}$&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How to do this ?&lt;/strong&gt;

&lt;div class=&#34;spoiler panel panel-default&#34;&gt;
&lt;div class=&#39;spoiler_block&#39;&gt;
      
        
      
&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-in spoiler_block_show&#39;&gt;
&lt;b&gt;Hint&lt;/b&gt;
&lt;/a&gt;

&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-out spoiler_block_hide&#39; style=&#39;display: none;&#39;&gt;
click to hide
&lt;/a&gt;

&lt;div class=&#39;spoiler_block_content&#39; style=&#39;display: none;&#39;&gt;
&lt;ul&gt;
&lt;li&gt;digit dp&lt;/li&gt;
&lt;li&gt;divide and conquer&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;divide-and-conquer-solution&#34;&gt;Divide and Conquer solution:&lt;/h2&gt;

&lt;div class=&#34;spoiler panel panel-default&#34;&gt;
&lt;div class=&#39;spoiler_block&#39;&gt;
      
        
      
&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-in spoiler_block_show&#39;&gt;
&lt;b&gt;Hint for divide and conquer&lt;/b&gt;
&lt;/a&gt;

&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-out spoiler_block_hide&#39; style=&#39;display: none;&#39;&gt;
click to hide
&lt;/a&gt;

&lt;div class=&#39;spoiler_block_content&#39; style=&#39;display: none;&#39;&gt;
print the values of $f(0),f(1),f(2),&amp;hellip;f(10)&amp;hellip;$
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;With some observation/math/googling we can find out that for any number $2^{k} - 1$ , $S(2^{k}-1) = 3^{k}$&lt;/p&gt;
&lt;p&gt;Again , for any number $x$ , if $i$ is maximum number such that $2^{i}-1 &amp;lt; x$ , then we can write $S(x) = S(2^{i}-1) + 2 \times S(x - 2^i)$&lt;/p&gt;



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;1&#34; type=&#34;checkbox&#34;  /&gt;
    &lt;label for=&#34;1&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;cpp&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__title&#34;&gt;Complex Tashreef : (Divide and Conquer)&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-cpp&#34; &gt;&lt;code id=&#34;code1&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


&lt;script type=&#34;text/javascript&#34;&gt;
  var xmlHttp = new XMLHttpRequest();
    xmlHttp.open( &#34;GET&#34;, &#39;https:\/\/raw.githubusercontent.com\/st3inum\/blog\/master\/codes\/toph\/complex-tashreef.cpp&#39;, false ); 
    xmlHttp.send( null );
    var div = document.getElementById(&#39;code1&#39;);
    div.textContent = &#39;\n&#39;+xmlHttp.responseText;
    
    
&lt;/script&gt;


&lt;p&gt;To avoid &lt;strong&gt;TLE&lt;/strong&gt; precalculate all values of $S(2^{i} - 1)$ and return them in function $S(n)$ directly.&lt;/p&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://brilliant.org/wiki/lucas-theorem/&#34;&gt;Lucas&#39; Theorem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://oeis.org/A001316&#34;&gt;OEIS A001316&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://toph.co/p/complex-tashreef&#34;&gt;Complex Tashreef - Intra AUST Programming Contest, Spring 2020&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>About</title>
      <link>https://st3inum.github.io/about/</link>
      <pubDate>Fri, 23 Apr 2021 15:01:22 +0600</pubDate>
      
      <guid>https://st3inum.github.io/about/</guid>
      <description>Hi there My name is Fahim Tajwar Saikat. I love sports programming.
Contact Me:  Facebook Mail (st3inum@gmail.com) Telegram Codeforces  </description>
      <content>&lt;h1 id=&#34;hi-there&#34;&gt;Hi there&lt;/h1&gt;
&lt;p&gt;My name is &lt;strong&gt;Fahim Tajwar Saikat&lt;/strong&gt;. I love sports programming.&lt;/p&gt;
&lt;h1 id=&#34;contact-me&#34;&gt;Contact Me:&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.facebook.com/st3inum&#34;&gt;Facebook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Mail (&lt;a href=&#34;mailto:st3inum@gmail.com&#34;&gt;st3inum@gmail.com&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://t.me/steinum&#34;&gt;Telegram&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://codeforces.com/profile/steinum&#34;&gt;Codeforces&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>Staircases - Timus 1017</title>
      <link>https://st3inum.github.io/posts/timus-1017/</link>
      <pubDate>Fri, 23 Apr 2021 00:28:55 +0600</pubDate>
      
      <guid>https://st3inum.github.io/posts/timus-1017/</guid>
      <description>Maintain a function with current position(column) of the staircases($i$) , number of remaining block($r$) , number of block we have used for the last column($l$).
for $i^{th}$ position we can use $x\in [1,min(r,l-1)]$ block in this step.
But if we use dp table of $500 \times 500 \times 500$ size it will cause you MLE.
Notice that, we dont need position($i$) here, only things we need here if $i$ is greater than $1$ or not.</description>
      <content>&lt;p&gt;Maintain a function with current position(column) of the staircases($i$) , number of remaining block($r$) , number of block we have used for the last column($l$).&lt;/p&gt;
&lt;p&gt;for $i^{th}$ position we can use $x\in [1,min(r,l-1)]$ block in this step.&lt;/p&gt;
&lt;p&gt;But if we use dp table of $500 \times 500 \times 500$ size it will cause you MLE.&lt;/p&gt;
&lt;p&gt;Notice that, we dont need position($i$) here, only things we need here if $i$ is greater than $1$ or not. Hence we can minimise $i$ with $2$. Then size of our dp table will be $2 \times 500 \times 500$ .&lt;/p&gt;



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;1&#34; type=&#34;checkbox&#34;  /&gt;
    &lt;label for=&#34;1&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;cpp&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__title&#34;&gt;code: 1&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-cpp&#34; &gt;&lt;code id=&#34;code1&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


&lt;script type=&#34;text/javascript&#34;&gt;
  var xmlHttp = new XMLHttpRequest();
    xmlHttp.open( &#34;GET&#34;, &#39;https:\/\/raw.githubusercontent.com\/st3inum\/blog\/master\/codes\/timus\/1017.cpp&#39;, false ); 
    xmlHttp.send( null );
    var div = document.getElementById(&#39;code1&#39;);
    div.textContent = &#39;\n&#39;+xmlHttp.responseText;
    
    
&lt;/script&gt;


&lt;p&gt;But actually we don&amp;rsquo;t need $i$ for this code. But Why?

&lt;div class=&#34;spoiler panel panel-default&#34;&gt;
&lt;div class=&#39;spoiler_block&#39;&gt;
      
        
      
&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-in spoiler_block_show&#39;&gt;
spoiler
&lt;/a&gt;

&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-out spoiler_block_hide&#39; style=&#39;display: none;&#39;&gt;
click to hide
&lt;/a&gt;

&lt;div class=&#39;spoiler_block_content&#39; style=&#39;display: none;&#39;&gt;
&lt;pre&gt;&lt;code&gt;try it yourself.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;The code will be like this:



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;2&#34; type=&#34;checkbox&#34;  /&gt;
    &lt;label for=&#34;2&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;cpp&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__title&#34;&gt;code: 2&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-cpp&#34; &gt;&lt;code id=&#34;code2&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


&lt;script type=&#34;text/javascript&#34;&gt;
  var xmlHttp = new XMLHttpRequest();
    xmlHttp.open( &#34;GET&#34;, &#39;https:\/\/raw.githubusercontent.com\/st3inum\/blog\/master\/codes\/timus\/1017(alter).cpp&#39;, false ); 
    xmlHttp.send( null );
    var div = document.getElementById(&#39;code2&#39;);
    div.textContent = &#39;\n&#39;+xmlHttp.responseText;
    
    
&lt;/script&gt;

&lt;/p&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://acm.timus.ru/problem.aspx?space=1&amp;amp;num=1017&#34;&gt;Timus - 1017&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>Alphabet - Codeforces - 101201a</title>
      <link>https://st3inum.github.io/posts/codeforces-101201a/</link>
      <pubDate>Thu, 22 Apr 2021 21:55:00 +0600</pubDate>
      
      <guid>https://st3inum.github.io/posts/codeforces-101201a/</guid>
      <description>Hint: Maintain a function with current position of the string that can we take and number of last character that we have taken as state.
We have three option for transition:
  take current charecter as the new character of our abcdef... string [if it is possible], and go to the next position of our given string.
  ignore the current character , and go to the next position of our given string.</description>
      <content>&lt;h2 id=&#34;hint&#34;&gt;Hint:&lt;/h2&gt;
&lt;p&gt;Maintain a function with current position of the string that can we take and number of last character that we have taken as state.&lt;/p&gt;
&lt;p&gt;We have three option for transition:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;take current charecter as the new character of our &lt;code&gt;abcdef...&lt;/code&gt; string [if it is possible], and go to the next position of our given string.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ignore the current character , and go to the next position of our given string.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;insert a new character as the new character of our &lt;code&gt;abcdef...&lt;/code&gt; string, and stay at the same position of our given string.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Saving all state in DP table is enough for this problem.&lt;/p&gt;



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;1&#34; type=&#34;checkbox&#34;  /&gt;
    &lt;label for=&#34;1&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;cpp&lt;/span&gt;
      
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-cpp&#34; &gt;&lt;code id=&#34;code1&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


&lt;script type=&#34;text/javascript&#34;&gt;
  var xmlHttp = new XMLHttpRequest();
    xmlHttp.open( &#34;GET&#34;, &#39;https:\/\/raw.githubusercontent.com\/st3inum\/blog\/master\/codes\/codeforces\/101201a.cpp&#39;, false ); 
    xmlHttp.send( null );
    var div = document.getElementById(&#39;code1&#39;);
    div.textContent = &#39;\n&#39;+xmlHttp.responseText;
    
    
&lt;/script&gt;


&lt;h2 id=&#34;reference&#34;&gt;Reference:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://codeforces.com/contest/1257/problem/G&#34;&gt;Codeforces - 1257G&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>Divisors - UVA 294</title>
      <link>https://st3inum.github.io/posts/uva-294/</link>
      <pubDate>Thu, 22 Apr 2021 10:03:45 +0600</pubDate>
      
      <guid>https://st3inum.github.io/posts/uva-294/</guid>
      <description>In this problem we will run a segmented sieve for [l,r]. In sieve we will maintain &amp;ldquo;number of divisor of $n$ which is smaller or equal than $\sqrt{n}$&amp;quot;.
For each, $i\in [1,\sqrt{r}]$ we will increase number of divisor of each multiple of $i$ in range $[max(l,i^2),r]$.
After the sieve we will multiply $2$ with each number of divisor, because if $i$ is a divisor of $n$ such that $i\le \sqrt{n}$ , we will have another divisor $\frac{n}{i} \ge \sqrt{n}$.</description>
      <content>&lt;p&gt;In this problem we will run a segmented sieve for [l,r]. In sieve we will maintain &lt;strong&gt;&amp;ldquo;number of divisor of $n$ which is smaller or equal than $\sqrt{n}$&amp;quot;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;For each, $i\in [1,\sqrt{r}]$ we will increase number of divisor of each multiple of $i$ in range $[max(l,i^2),r]$.&lt;/p&gt;
&lt;p&gt;After the sieve we will multiply $2$ with each number of divisor, because if $i$ is a divisor of $n$ such that $i\le \sqrt{n}$ , we will have another divisor $\frac{n}{i} \ge \sqrt{n}$. [if n is a square number , we will subtract $1$ also after multiplication].&lt;/p&gt;



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;1&#34; type=&#34;checkbox&#34;  /&gt;
    &lt;label for=&#34;1&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;cpp&lt;/span&gt;
      
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-cpp&#34; &gt;&lt;code id=&#34;code1&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


&lt;script type=&#34;text/javascript&#34;&gt;
  var xmlHttp = new XMLHttpRequest();
    xmlHttp.open( &#34;GET&#34;, &#39;https:\/\/raw.githubusercontent.com\/st3inum\/blog\/master\/codes\/uva\/294.cpp&#39;, false ); 
    xmlHttp.send( null );
    var div = document.getElementById(&#39;code1&#39;);
    div.textContent = &#39;\n&#39;+xmlHttp.responseText;
    
    
&lt;/script&gt;


&lt;h2 id=&#34;reference&#34;&gt;Reference:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://onlinejudge.org/external/2/294.pdf&#34;&gt;UVA - 294&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>Prime Factor Love - Toph</title>
      <link>https://st3inum.github.io/posts/toph-prime-factor-love/</link>
      <pubDate>Thu, 22 Apr 2021 02:31:20 +0600</pubDate>
      
      <guid>https://st3inum.github.io/posts/toph-prime-factor-love/</guid>
      <description>Problem Description:   $mod = 1000009$
  $ [p] = \begin{cases} 1 \text{ if $p$ is true} \newline 0 \text{ if $p$ is not true} \end{cases}$
  $f(n) = \sum_{i=2}^{n-1}{[i|n]i}$
  $S(n) = \sum_{i=1}^{n}{f(i)}$ for a given n
  You need to find , sum of all prime factor of S(n)%mod
  Inside Math:   We know , $\sigma_1(n) = \sum_{i=1}^{n}{[i|n]i}$
  $sum(n) = \sum_{i=1}^{n}{i}$</description>
      <content>&lt;h2 id=&#34;problem-description&#34;&gt;Problem Description:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;$mod = 1000009$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$ [p] = \begin{cases} 1 \text{ if $p$ is true} \newline 0 \text{ if $p$ is not true} \end{cases}$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$f(n) = \sum_{i=2}^{n-1}{[i|n]i}$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$S(n) = \sum_{i=1}^{n}{f(i)}$ for a given n&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You need to find , sum of all prime factor of S(n)%mod&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;inside-math&#34;&gt;Inside Math:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;We know , $\sigma_1(n) = \sum_{i=1}^{n}{[i|n]i}$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$sum(n) = \sum_{i=1}^{n}{i}$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$sum(l,r) = \sum_{i=l}^{r}{i}$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Let assume , $ssod(n) = \sum_{i=1}^{n}{\sigma_1(i)}$ , ssod = sum of sum-of-divisor&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We can represent $S(n) = ssod(n) - sum(n) - n + [n&amp;gt;=1]$&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now , if we can find $ssod(n)$ faster, we can solve the problem.&lt;/p&gt;
&lt;p&gt;$\Longrightarrow ssod(n) = \sum_{i=1}^{n}{\sigma_1(i)}$&lt;/p&gt;
&lt;p&gt;$\Longrightarrow ssod(n) = \sum_{i=1}^{n}{\sum_{j=1}^{i}{[j|i]j}}$&lt;/p&gt;
&lt;p&gt;$\Longrightarrow ssod(n) = \sum_{i=1}^{n}{\sum_{j=1}^{n}{[j|i]j}}$&lt;/p&gt;
&lt;p&gt;$\Longrightarrow ssod(n) = \sum_{i=j}^{n}{j \times \sum_{i=1}^{n}{[j|i]}}$&lt;/p&gt;
&lt;p&gt;$\Longrightarrow ssod(n) = \sum_{i=j}^{n}{j \times \lfloor \frac{n}{j} \rfloor}$&lt;/p&gt;
&lt;p&gt;Now there, might be $O(\sqrt{n})$ different values for $\lfloor \frac{n}{j} \rfloor$ [This is also known as Harmonic lemma]. We will iterate over all such values of $\lfloor \frac{n}{j} \rfloor$ , and sum up there contribution. Thus we can calculate values for $ssod(n)$ in $O(\sqrt{n})$ and then for $S(n)$.&lt;/p&gt;
&lt;p&gt;For the second part , we will maintain a sieve for values $[0,mod)$ and precalculate sum of prime factor of all the number in the range.&lt;/p&gt;



  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;1&#34; type=&#34;checkbox&#34;  /&gt;
    &lt;label for=&#34;1&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;cpp&lt;/span&gt;
      
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-cpp&#34; &gt;&lt;code id=&#34;code1&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


&lt;script type=&#34;text/javascript&#34;&gt;
  var xmlHttp = new XMLHttpRequest();
    xmlHttp.open( &#34;GET&#34;, &#39;https:\/\/raw.githubusercontent.com\/st3inum\/blog\/master\/codes\/toph\/prime-factor-love.cpp&#39;, false ); 
    xmlHttp.send( null );
    var div = document.getElementById(&#39;code1&#39;);
    div.textContent = &#39;\n&#39;+xmlHttp.responseText;
    
    
&lt;/script&gt;


&lt;h2 id=&#34;reference&#34;&gt;Reference:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://toph.co/p/prime-factor-love&#34;&gt;Toph - Prime Factor Love&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://codeforces.com/blog/entry/53925&#34;&gt;Harmonic Lemma&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>Divisor Set - Codeforces - 1257g</title>
      <link>https://st3inum.github.io/posts/codeforces-1257g/</link>
      <pubDate>Wed, 21 Apr 2021 23:41:52 +0600</pubDate>
      
      <guid>https://st3inum.github.io/posts/codeforces-1257g/</guid>
      <description> cpp     var xmlHttp = new XMLHttpRequest(); xmlHttp.open( &#34;GET&#34;, &#39;https:\/\/raw.githubusercontent.com\/st3inum\/blog\/master\/codes\/codeforces\/1257g.cpp&#39;, false ); xmlHttp.send( null ); var div = document.getElementById(&#39;code1&#39;); div.textContent = &#39;\n&#39;+xmlHttp.responseText;  Reference:  Codeforces - 1257G Codeforces Editorial OEIS A096825  </description>
      <content>


  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;1&#34; type=&#34;checkbox&#34;  /&gt;
    &lt;label for=&#34;1&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;cpp&lt;/span&gt;
      
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-cpp&#34; &gt;&lt;code id=&#34;code1&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


&lt;script type=&#34;text/javascript&#34;&gt;
  var xmlHttp = new XMLHttpRequest();
    xmlHttp.open( &#34;GET&#34;, &#39;https:\/\/raw.githubusercontent.com\/st3inum\/blog\/master\/codes\/codeforces\/1257g.cpp&#39;, false ); 
    xmlHttp.send( null );
    var div = document.getElementById(&#39;code1&#39;);
    div.textContent = &#39;\n&#39;+xmlHttp.responseText;
    
    
&lt;/script&gt;


&lt;h2 id=&#34;reference&#34;&gt;Reference:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://codeforces.com/contest/1257/problem/G&#34;&gt;Codeforces - 1257G&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://codeforces.com/blog/entry/71434&#34;&gt;Codeforces Editorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://oeis.org/A096825&#34;&gt;OEIS A096825&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>Modular Arithmetic: Introduction</title>
      <link>https://st3inum.github.io/posts/intro-to-modular-arithmetic/</link>
      <pubDate>Wed, 21 Apr 2021 03:26:08 +0600</pubDate>
      
      <guid>https://st3inum.github.io/posts/intro-to-modular-arithmetic/</guid>
      <description>মডুলার অ্যারিথমেটিক নিয়ে পড়ার আগে আমরা কিছু জিনিস রিক্যাপ করে নেই , যেগুলা আমরা ক্লাস ফাইভে পড়ে এসেছি ।
ভাজ্য = ভাজক × ভাগফল + ভাগশেষ বা, Dividend = Divisor × Quotient + Remainder
অনেকের যদি কোনটা কি জিনিস মনে না থাকে তাহলে পুরানো বইয়ের পাতা উলটে দেখতে পার , আর গুগল মামা তো আছেই ।
এবার অনেকর মনে প্রশ্ন আসবে , অমুক প্রবলেম তো সহজেই পাটিগণিত / সাধারণ নিয়মে সল্ভ করে ফেলা যায় , তাহলে এসব ম্যাথ করার জন্য মডুলার অ্যারিথমেটিক কেন শিখবো?</description>
      <content>&lt;p&gt;মডুলার অ্যারিথমেটিক নিয়ে পড়ার আগে আমরা কিছু জিনিস রিক্যাপ করে নেই , যেগুলা আমরা ক্লাস ফাইভে পড়ে এসেছি ।&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ভাজ্য = ভাজক × ভাগফল + ভাগশেষ&lt;/code&gt; বা, &lt;code&gt;Dividend = Divisor × Quotient + Remainder&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;অনেকের যদি কোনটা কি জিনিস মনে না থাকে তাহলে পুরানো বইয়ের পাতা উলটে দেখতে পার , আর &lt;a href=&#34;google.com&#34;&gt;গুগল&lt;/a&gt; মামা তো আছেই ।&lt;/p&gt;
&lt;p&gt;এবার অনেকর মনে প্রশ্ন আসবে , অমুক প্রবলেম তো সহজেই পাটিগণিত / সাধারণ নিয়মে সল্ভ করে  ফেলা যায় , তাহলে এসব ম্যাথ করার জন্য মডুলার অ্যারিথমেটিক কেন শিখবো? তার উপর এটা তো একটা কঠিন টপিক ।&lt;/p&gt;
&lt;p&gt;তাদের জন্য বলে রাখা, মডুলার অ্যারিথমেটিক হল এসব সাধারণ নিয়মগুলোর একটা কম্প্যাক্ট ফর্ম । তাই এভাবে করলে সহজেই অনেক প্রবলেম সল্ভ করে ফেলা যায় । যেগুলো কিনা সাধারণ ভাবে করলে অনেক বড় হয়ে যেত ।  আর সত্যি কথা বলতে মানুষকে কোন ম্যাথের সলিউশন বুঝাতে গেলে বেশি লেখা দেখলে ভয় পেয়ে যায়। কিন্তু মডুলার অ্যারিথমেটিক দিয়ে সল্ভ করলে কয়েক লাইনে হয়ে যায় বলে তারা ভয় পায় না। (just kidding :v​ )&lt;/p&gt;
&lt;h2 id=&#34;definition&#34;&gt;Definition:&lt;/h2&gt;
&lt;p&gt;আমরা অনেক সময় দেখে থাকি $a \text{ (mod b)}$ । এর মানে কি? সহজ করে বলতে গেলে এর মানে হল &lt;code&gt;a&lt;/code&gt; কে &lt;code&gt;b&lt;/code&gt; দিয়ে ভাগ করলে যেই ভাগশেষ থাকবে সেই সংখ্যাটা ।  উদাহরণস্বরূপ $5 \text{ (mod 3)}=2$&lt;/p&gt;
&lt;p&gt;এখানে &lt;code&gt;mod&lt;/code&gt; সাইনটা আসলে &lt;code&gt;modulo(মডুলো)&lt;/code&gt; শব্দের সংক্ষিপ্ত রূপ ।&lt;/p&gt;
&lt;p&gt;আমরা আবার অনেকসময় দেখে থাকি $a\equiv b \text{ (mod m)}$ এর মানেই বা কি?&lt;/p&gt;
&lt;p&gt;কখনো যদি $a \text{ (mod m)}=b \text{ (mod m)}$ হয় , তখন আমরা সংক্ষেপে লিখতে পারি $a\equiv b \text{ (mod m)}$ । এবং এটাকে পড়তে হয় &lt;code&gt;&amp;quot;a is congruent to b modulo m&amp;quot;&lt;/code&gt; এভাবে ।&lt;/p&gt;
&lt;p&gt;এটাকে আমরা আরও একভাবে সংজ্ঞায়িত করতে পারি , যদি $(a-b)$ , $m$ দিয়ে নিঃশেষে ভাগ যায়, তাহলে আমরা লিখতে পারি $a\equiv b \text{ (mod m)}$ ।&lt;/p&gt;
&lt;p&gt;আসলে দুইটা সংজ্ঞাই একই , একটু চিন্তা করলে বুঝতে পারবা।&lt;/p&gt;
&lt;h2 id=&#34;properties&#34;&gt;Properties:&lt;/h2&gt;
&lt;p&gt;আমরা কোন সমীকরণের দুইপাশে যেমন একই সংখ্যা দিয়ে যোগ , বিয়োগ, গুন  করতে পারি ঠিক তেমনি আমরা মডুলার অ্যারিথমেটিকেও উভয় দিকে একই সংখ্যা দিয়ে যোগ বিয়োগ গুন করতে পারি । [ &lt;em&gt;&lt;strong&gt;বিদ্রঃ উভয় দিকে একই সংখ্যা দিয়ে ভাগ করতে পারি না ।&lt;/strong&gt;&lt;/em&gt; ]&lt;/p&gt;
&lt;p&gt;যেমন আমাদের রাশিটি যদি হয় $a\equiv b \text{ (mod m)}$ তাহলে কোন পূর্নসংখ্যা $k$ এর জন্য আমরা লিখতে পারি&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;$a +k\equiv b+k \text{ (mod m)}$

&lt;div class=&#34;spoiler panel panel-default&#34;&gt;
&lt;div class=&#39;spoiler_block&#39;&gt;
      
        
      
&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-in spoiler_block_show&#39;&gt;
proof
&lt;/a&gt;

&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-out spoiler_block_hide&#39; style=&#39;display: none;&#39;&gt;
click to hide
&lt;/a&gt;

&lt;div class=&#39;spoiler_block_content&#39; style=&#39;display: none;&#39;&gt;
.
$a\equiv b \text{ (mod m)}$ হলে আমি বলতে পারি $a-b=mp$
যেখানে &lt;code&gt;p&lt;/code&gt; হল $(a-b)$ কে &lt;code&gt;m&lt;/code&gt; দিয়ে ভাগ করলে যেই ভাগফল থাকবে সেইটা ( ২য় সংজ্ঞা দিয়ে চিন্তা কর)
এখন ,
$a-b=mp$
= $(a+k)-(b+k)=mp$
তারমানে বলতে পারি , $a +k\equiv b+k \text{ (mod m)}$
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$a-k\equiv b-k \text{ (mod m)}$

&lt;div class=&#34;spoiler panel panel-default&#34;&gt;
&lt;div class=&#39;spoiler_block&#39;&gt;
      
        
      
&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-in spoiler_block_show&#39;&gt;
proof
&lt;/a&gt;

&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-out spoiler_block_hide&#39; style=&#39;display: none;&#39;&gt;
click to hide
&lt;/a&gt;

&lt;div class=&#39;spoiler_block_content&#39; style=&#39;display: none;&#39;&gt;
&lt;pre&gt;&lt;code&gt;নিজে চেষ্টা কর।
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$a\times k\equiv b\times k \text{ (mod m)}$

&lt;div class=&#34;spoiler panel panel-default&#34;&gt;
&lt;div class=&#39;spoiler_block&#39;&gt;
      
        
      
&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-in spoiler_block_show&#39;&gt;
proof
&lt;/a&gt;

&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-out spoiler_block_hide&#39; style=&#39;display: none;&#39;&gt;
click to hide
&lt;/a&gt;

&lt;div class=&#39;spoiler_block_content&#39; style=&#39;display: none;&#39;&gt;
&lt;pre&gt;&lt;code&gt;নিজে চেষ্টা কর।
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;আরও কিছু বৈশিষ্ট্য &amp;hellip;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$a \equiv b \text{ (mod m)}$ এবং $p \equiv q \text{ (mod m)}$ হলে $a+p \equiv b+q \text{ (mod m)}$&lt;/li&gt;
&lt;li&gt;$a \equiv b \text{ (mod m)}$ এবং $p \equiv q \text{ (mod m)}$ হলে $a-p \equiv b-q \text{ (mod m)}$&lt;/li&gt;
&lt;li&gt;$a \equiv b \text{ (mod m)}$ এবং $p \equiv q \text{ (mod m)}$ হলে $a\times p \equiv b\times q \text{ (mod m)}$&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;residue-class&#34;&gt;Residue class:&lt;/h2&gt;
&lt;p&gt;কোন ধনাত্মক পূর্নসংখ্যা , $n$ দিয়ে অন্য যেকোনো পূর্নসংখ্যাকে ভাগ করলে ভাগশেষের সম্ভাব্য সকল সংখ্যাকে নিয়ে যে সেট হয় , তাকে &lt;a href=&#34;https://artofproblemsolving.com/wiki/index.php/Residue_class&#34;&gt;রেসিডিউ ক্লাস&lt;/a&gt; বলে ।  সহজ ভাবে বললে , কোন পূর্ন সংখ্যা , $n$ দিয়ে অন্য যেকোনো পূর্নসংখ্যাকে ভাগ করি না কেন , ভাগশেষ অবশ্যই $0$ থেকে $n-1$ এর মধ্যে হবে ( $0$ এবং $n-1$ সহ ) । যেমনঃ $5$ দিয়ে কোন সংখ্যাকে ভাগ করলে ভাগশেষ হতে পারে ${0,1,2,3,4}$ । তাই $5$ এর রেসিডিউ ক্লাস হল ${0,1,2,3,4}$ ।&lt;/p&gt;
&lt;h2 id=&#34;divisibility-rule&#34;&gt;Divisibility Rule:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;$2$ &lt;strong&gt;দিয়ে নিঃশেষে বিভাজ্য হওয়ার নিয়মঃ&lt;/strong&gt;
কোন সংখ্যার শেষ অংকটি যদি $2$ দিয়ে ভাগ যায় , অর্থাৎ $0,2,4,6,8$ এর মধ্যে যেকোনোটা হয় । তাহলে সংখ্যাটি $2$ দিয়ে বিভাজ্য ।

&lt;div class=&#34;spoiler panel panel-default&#34;&gt;
&lt;div class=&#39;spoiler_block&#39;&gt;
      
        
      
&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-in spoiler_block_show&#39;&gt;
proof
&lt;/a&gt;

&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-out spoiler_block_hide&#39; style=&#39;display: none;&#39;&gt;
click to hide
&lt;/a&gt;

&lt;div class=&#39;spoiler_block_content&#39; style=&#39;display: none;&#39;&gt;
.
মনে করি সংখ্যাটি $n=10x+p$ । অর্থাৎ এর শেষ অংকটি হল $p$ ।
তাহলে আমরা বলতে পারি ,
$n\equiv 10x+p \text{ (mod 2)}$
$\Longrightarrow n\equiv 0+p \text{ (mod 2)}$
$\Longrightarrow \boxed{n\equiv p \text{ (mod 2)}}$
অর্থাৎ $p$ ( শেষ অংক) কে $2$ দিয়ে ভাগ করলে যেই ভাগশেষ থাকবে , $n$ কে $2$ দিয়ে ভাগ করলেও একই ভাগশেষ থাকবে ।
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$3$ &lt;strong&gt;দিয়ে নিঃশেষে বিভাজ্য হওয়ার নিয়মঃ&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;কোন সংখ্যার অংকগুলোর যোগফল যদি $3$ দিয়ে ভাগ যায়, তাহলে সংখ্যাটিও $3$ দিয়ে ভাগ যাবে ।

&lt;div class=&#34;spoiler panel panel-default&#34;&gt;
&lt;div class=&#39;spoiler_block&#39;&gt;
      
        
      
&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-in spoiler_block_show&#39;&gt;
proof
&lt;/a&gt;

&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-out spoiler_block_hide&#39; style=&#39;display: none;&#39;&gt;
click to hide
&lt;/a&gt;

&lt;div class=&#39;spoiler_block_content&#39; style=&#39;display: none;&#39;&gt;
&lt;p&gt;.
মনে করি সংখ্যাটি  $n=d_{0}+10d_{1}+100d_{2}+&amp;hellip;+10^{k-1}d_{k-1}$&lt;/p&gt;
&lt;p&gt;সংক্ষেপে বললে , $n=\sum_{i=0}^{k-1}{10^{i}d_{i}}$
এখানে $n$ হল $k$ অংকের একটি সংখ্যা , এবং এর অংকগুলো হল , $d_{0},d_{1},d_{2},&amp;hellip;,d_{k-1}$। যেখানে $d_{0}$ হল একক স্থানীয় অংক, $d_{1}$ হল দশক স্থানীয় অংক , &amp;hellip; ।
এখন , $10^p\equiv10\times 10 \times &amp;hellip; \times 10 \text{ (mod 3)}$ [মোট $p$ সংখ্যক $10$]
$\Longrightarrow 10^{p}\equiv 1\times 1\times 1 \times &amp;hellip; \times 1 \text{ (mod 3)} \equiv 1 \text{ (mod 3)}$&lt;/p&gt;
&lt;p&gt;অর্থাৎ , $n\equiv d_{0}+10d_{1}+100d_{2}+&amp;hellip;+10^{k-1}d_{k-1}\text{ (mod 3)}$
$\Longrightarrow \boxed{n\equiv d_{0}+d_{1}+d_{2}+&amp;hellip;+10d_{k-1} \text{ (mod 3)}}$&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$4$ &lt;strong&gt;দিয়ে নিঃশেষে বিভাজ্য হওয়ার নিয়মঃ&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;কোন সংখ্যার শেষ দুই অংক নিয়ে গঠিত সংখ্যা যদি $4$ দিয়ে ভাগ যায়, তাহলে সংখ্যাটিও $4$ দিয়ে ভাগ যাবে ।

&lt;div class=&#34;spoiler panel panel-default&#34;&gt;
&lt;div class=&#39;spoiler_block&#39;&gt;
      
        
      
&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-in spoiler_block_show&#39;&gt;
proof
&lt;/a&gt;

&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-out spoiler_block_hide&#39; style=&#39;display: none;&#39;&gt;
click to hide
&lt;/a&gt;

&lt;div class=&#39;spoiler_block_content&#39; style=&#39;display: none;&#39;&gt;
.
মনে করি সংখ্যাটি  $n=d_{0}+10d_{1}+100d_{2}+&amp;hellip;+10^{k-1}d_{k-1}$
$\Longrightarrow n\equiv d_{0}+10d_{1}+100d_{2}+&amp;hellip;+10^{k-1}d_{k-1}\text{ (mod 4)}$
$\Longrightarrow \boxed{n\equiv d_{0}+10d_{1}\text{ (mod 4)}}$
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&amp;hellip;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;&amp;hellip;চলবে&amp;hellip;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://brilliant.org/wiki/modular-arithmetic/&#34;&gt;Brilliant Wiki&lt;/a&gt; (আমি যখন ব্রিলিয়ান্ট উইকি খুললাম তখন অবাক হয়ে গেলাম এটা দেখে যে সংজ্ঞার অংশ দুই জায়গায় ই একই :v )&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Modulo_operation&#34;&gt;মডুলো অপারেশন - উইকিপিডিয়া&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Divisibility_rule&#34;&gt;Divisibility rule from wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://brilliant.org/wiki/modular-arithmetic-misconceptions/&#34;&gt;Some Misconception about modulo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>Modular Arithmetic: Introductory Problems</title>
      <link>https://st3inum.github.io/posts/introductory-problems/</link>
      <pubDate>Wed, 21 Apr 2021 03:26:08 +0600</pubDate>
      
      <guid>https://st3inum.github.io/posts/introductory-problems/</guid>
      <description>এই পোস্টে আমরা কিছু প্রব্লেম নিয়ে আলোচনা করবো । সবাইকে অনুরোধ করবো কোন সমস্যার সমাধান / হিন্ট দেখার আগে যথেষ্ট সময় দেওয়ার । তারপর না পারলে সমাধান / হিন্ট দেখতে পারেন । এখানে শেষের দিকে কিছু প্রোগ্রামিং রিলেটেড সমস্যা থাকবে । কোন প্রবলেম দেখে কাউকে বিচলিত না হওয়ার জন্য অনুরোধ করবো । কেউ যদি নিতান্ত কোন সমস্যায় আটকে যান , তাহলে ঐ সমস্যাটা স্কিপ করে পরবর্তী সমস্যাগুলো দেখার অনুরোধ করবো ।</description>
      <content>&lt;p&gt;এই পোস্টে আমরা কিছু প্রব্লেম নিয়ে আলোচনা করবো । সবাইকে অনুরোধ করবো কোন সমস্যার সমাধান / হিন্ট দেখার আগে যথেষ্ট সময় দেওয়ার । তারপর না পারলে সমাধান / হিন্ট দেখতে পারেন । এখানে শেষের দিকে কিছু প্রোগ্রামিং রিলেটেড সমস্যা থাকবে । কোন প্রবলেম দেখে কাউকে বিচলিত না হওয়ার জন্য অনুরোধ করবো । কেউ যদি নিতান্ত কোন সমস্যায় আটকে যান , তাহলে ঐ সমস্যাটা স্কিপ করে পরবর্তী সমস্যাগুলো দেখার অনুরোধ করবো ।&lt;/p&gt;
&lt;h2 id=&#34;some-mathematical-problems&#34;&gt;Some mathematical problems:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;$16017020$ কে $4$ দিয়ে ভাগ করলে ভাগশেষ কত থাকবে ?
&lt;strong&gt;সোর্সঃ BDMO regional 2018&lt;/strong&gt;

&lt;div class=&#34;spoiler panel panel-default&#34;&gt;
&lt;div class=&#39;spoiler_block&#39;&gt;
      
        
      
&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-in spoiler_block_show&#39;&gt;
hint
&lt;/a&gt;

&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-out spoiler_block_hide&#39; style=&#39;display: none;&#39;&gt;
click to hide
&lt;/a&gt;

&lt;div class=&#39;spoiler_block_content&#39; style=&#39;display: none;&#39;&gt;
.
বিভাজ্যতার নিয়ম
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;পরপর চারটি সংখ্যার যোগফলকে $4$ দিয়ে ভাগ করলে ভাগশেষ কত হবে ?
&lt;strong&gt;সোর্সঃ BDMO regional 2016&lt;/strong&gt;

&lt;div class=&#34;spoiler panel panel-default&#34;&gt;
&lt;div class=&#39;spoiler_block&#39;&gt;
      
        
      
&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-in spoiler_block_show&#39;&gt;
hint
&lt;/a&gt;

&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-out spoiler_block_hide&#39; style=&#39;display: none;&#39;&gt;
click to hide
&lt;/a&gt;

&lt;div class=&#39;spoiler_block_content&#39; style=&#39;display: none;&#39;&gt;
.
কবুতরের খোপের নীতি(pigeonhole principle) + Residue class
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;দুইটি সংখ্যার যোগফল $12$ দিয়ে বিভাজ্য । সংখ্যা দুইটির বিয়োগফলকে $2$ দিয়ে ভাগ করলে ভাগশেষ কত থাকে?
&lt;strong&gt;সোর্সঃ BDMO regional 2018&lt;/strong&gt;

&lt;div class=&#34;spoiler panel panel-default&#34;&gt;
&lt;div class=&#39;spoiler_block&#39;&gt;
      
        
      
&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-in spoiler_block_show&#39;&gt;
solution
&lt;/a&gt;

&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-out spoiler_block_hide&#39; style=&#39;display: none;&#39;&gt;
click to hide
&lt;/a&gt;

&lt;div class=&#39;spoiler_block_content&#39; style=&#39;display: none;&#39;&gt;
.
মনে করি সংখ্যা দুইটি হল $a$ এবং $b$।
অর্থাৎ $a+b\equiv 0 \text{ (mod 12)}$
$\Longrightarrow a+b = 12k$
$\Longrightarrow a-b = 12k-2b$
$\Longrightarrow a-b = 2(6k-b)$
$\Longrightarrow a-b \equiv 2(6k-b) \text{ (mod 2)}$
$\Longrightarrow \boxed{a-b \equiv 0 \text{ (mod 2)}}$
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$11+12+13+14&amp;hellip;..+2019= S$
What will be the remainder when dived by $100$?

&lt;div class=&#34;spoiler panel panel-default&#34;&gt;
&lt;div class=&#39;spoiler_block&#39;&gt;
      
        
      
&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-in spoiler_block_show&#39;&gt;
solution
&lt;/a&gt;

&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-out spoiler_block_hide&#39; style=&#39;display: none;&#39;&gt;
click to hide
&lt;/a&gt;

&lt;div class=&#39;spoiler_block_content&#39; style=&#39;display: none;&#39;&gt;
.
$s=(1+2+3+&amp;hellip;+2019)-(1+2+3+&amp;hellip;+10)$
$s=\frac{2019\times 2020}{2}-\frac{10\times 11}{2}$
$s=2019\times 1010-5\times 11$
$s \equiv 2019\times 1010-5\times 11 \text{ (mod 100)}$
$s \equiv 19\times 10-5\times 11 \text{ (mod 100)}$
$s \equiv 190-55 \text{ (mod 100)}$
$s \equiv 135 \text{ (mod 100)}$
$s \equiv \boxed{35} \text{ (mod 100)}$
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$s=2016-2015+2014-2013+&amp;hellip;+4-3+2-1$
$s$ কে $4$ দিয়ে ভাগ করলে ভাগশেষ কত হবে ?
&lt;strong&gt;সোর্সঃ BDMO regional 2018&lt;/strong&gt;

&lt;div class=&#34;spoiler panel panel-default&#34;&gt;
&lt;div class=&#39;spoiler_block&#39;&gt;
      
        
      
&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-in spoiler_block_show&#39;&gt;
hint
&lt;/a&gt;

&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-out spoiler_block_hide&#39; style=&#39;display: none;&#39;&gt;
click to hide
&lt;/a&gt;

&lt;div class=&#39;spoiler_block_content&#39; style=&#39;display: none;&#39;&gt;
.
পরপর দুইটি সংখ্যা নিয়ে জোড়া করে হিসাব করলেই হয়ে যায় । এই সমস্যায় মডুলার অ্যারিথমেটিক তেমন কোন কাজে লাগে না ।
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$s=2^{2}+4^{2}+8^{2}+&amp;hellip;+512^{2}+1024^{2}$
$s$ এর শেষ অংক কত?
&lt;strong&gt;সোর্সঃ BDMO regional 2016&lt;/strong&gt;

&lt;div class=&#34;spoiler panel panel-default&#34;&gt;
&lt;div class=&#39;spoiler_block&#39;&gt;
      
        
      
&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-in spoiler_block_show&#39;&gt;
hint
&lt;/a&gt;

&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-out spoiler_block_hide&#39; style=&#39;display: none;&#39;&gt;
click to hide
&lt;/a&gt;

&lt;div class=&#39;spoiler_block_content&#39; style=&#39;display: none;&#39;&gt;
.
এখানে আসলে আমাদের $s \text{ (mod 10)}$ বের করতে হবে ।
আমাদের পদগুলোর সাধরন রূপ হল $2^{2x}$ [যেখানে $x\ge 1$ এবং $x$ পূর্ন সংখ্যা]
$2^{2x}=2^{2(x-1)+2}=2^{2(x-1)}\times 2^{2}=2^{2(x-1)}\times 4$
অর্থাৎ , কোন পদের মডুলো মান হবে তার আগের মডুলো মানের $4$ গুন ।
প্রথম পদ , $2^2\equiv 4 \text{ (mod 10)}$
দ্বিতীয় পদ , $2^4\equiv 4 \times 4 \equiv 6 \text{ (mod 10)}$
তৃতীয় পদ , $2^6\equiv 6 \times 4 \equiv 4 \text{ (mod 10)}$
&amp;hellip;
এভাবে $4$ আর $6$ আস্তে থাকবে চক্রাকারে । এখান থেকে পরপর দুইটি পদ নিয়ে হিসাব করলেই হয়ে যাবে ।
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;একটি গোল টেবিলে $10$ টি চেয়ারে দশজন লোক বসে আছে । চেয়ারগুলো ঘড়ির কাটার ঘুর্ননের দিকে $0,1,2,&amp;hellip;,9$ সংখ্যা দিয়ে ক্রমানুসারে চিহ্নিত করা । $0$ চিহ্নিত চেয়ারে থাকা লোকটির কাছে একটি বল আছে এবং বলটিকে এখন ঘড়ির কাটার ঘূর্ননের দিকে একজনের কাছে থেকে অপরজনের কাছে পাঠানো হবে । প্রথম ধাপে বলটি $1^{1}$ সংখ্যক চেয়ার ঘুরে $1$ চিহ্নিত চেয়ারে যায় । দ্বিতীয় ধাপে সেখান থেকে আরও $2^{2}$ সংখ্যক চেয়ার ঘুরে $5$ চিহ্নিত চেয়ারে যায় । তৃতীয় ধাপে বলটি সেখান থেকে আরও $3^{3}$ সংখ্যক চেয়ার ঘুরে $2$ চিহ্নিত চেয়ারে যায় । এভাবে $2020$ তম ধাপে বলটি কত নাম্বার চেয়ারে থাকবে ?
&lt;strong&gt;সোর্সঃ BDMO regional 2017&lt;/strong&gt;

&lt;div class=&#34;spoiler panel panel-default&#34;&gt;
&lt;div class=&#39;spoiler_block&#39;&gt;
      
        
      
&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-in spoiler_block_show&#39;&gt;
hint
&lt;/a&gt;

&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-out spoiler_block_hide&#39; style=&#39;display: none;&#39;&gt;
click to hide
&lt;/a&gt;

&lt;div class=&#39;spoiler_block_content&#39; style=&#39;display: none;&#39;&gt;
.
এখানে আসলে আমাদের $\sum_{i=1}^{2020}{i^i} \text{ (mod 10)}$ বের করতে হবে ।
সহজ ভাষায় $1^1+2^2+3^+&amp;hellip;+2020^{2020} \text{ (mod 10)}$  বের করতে হবে ।
চক্র(cycle) বের করে সহজেই এই সমস্যাটির সমাধান করা যায় ।
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$c=2^{1}+2^{2}+2^{3}+2^{4}+&amp;hellip;+2^{2017}+2^{2018}$
$c$ কে $3$ দিয়ে ভাগ করলে ভাগশেষ কত থাকবে ?
&lt;strong&gt;সোর্সঃ BDMO regional 2018&lt;/strong&gt;

&lt;div class=&#34;spoiler panel panel-default&#34;&gt;
&lt;div class=&#39;spoiler_block&#39;&gt;
      
        
      
&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-in spoiler_block_show&#39;&gt;
hint
&lt;/a&gt;

&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-out spoiler_block_hide&#39; style=&#39;display: none;&#39;&gt;
click to hide
&lt;/a&gt;

&lt;div class=&#39;spoiler_block_content&#39; style=&#39;display: none;&#39;&gt;
.
$a^p \text{ (mod m)}$ এরকম আকারের যেকোনো সংখ্যার একটি বৈশিষ্ট্য হল $a,m$ এর ফিক্স মানের জন্য $p$ এর মান বাড়ালে চক্র(cycle) পাওয়া যায়।&lt;br /&gt;
এই সমস্যার ক্ষেত্রে আমরা $2,1,2,1,&amp;hellip;$ এরকম চক্র পাবো , এখান থেকে পরপর দুইটি মানের জোড়া নিয়ে হিসাব করলেই হয়ে যাবে ।
এই সমস্যাটি গুণোত্তর ধারা (geometric series) +  মডুলার অ্যারিথমেটিক দিয়েও করা যায় ।
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A = 1234&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;100 (Using all number from 1 to 100 conjecutively) What will be the remainder if A is divide by 9?
&lt;strong&gt;সোর্সঃ KUET math club , mothly challenge - 1&lt;/strong&gt;

&lt;div class=&#34;spoiler panel panel-default&#34;&gt;
&lt;div class=&#39;spoiler_block&#39;&gt;
      
        
      
&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-in spoiler_block_show&#39;&gt;
solution
&lt;/a&gt;

&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-out spoiler_block_hide&#39; style=&#39;display: none;&#39;&gt;
click to hide
&lt;/a&gt;

&lt;div class=&#39;spoiler_block_content&#39; style=&#39;display: none;&#39;&gt;
&lt;p&gt;.
&lt;strong&gt;Bonus question&lt;/strong&gt;:  If we concatenate n number ($a_1,a_2,a_3,&amp;hellip;a_n$). And thus get number &lt;code&gt;M&lt;/code&gt; then prove that $M\equiv \sum_{i=1}^{n}{a_i}\text{ (mod 9)}$&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;proof&lt;/strong&gt; :&lt;/p&gt;
&lt;p&gt;if the length of the $i_{th}$ number is $p_{i}$ then we can write,&lt;/p&gt;
&lt;p&gt;$M=\sum_{i=1}^{n}{a_{i}\times 10^{\sum_{j=i+1}^{n}{p_{j}}}}$&lt;/p&gt;
&lt;p&gt;in short we can write , $M=\sum_{i=1}^{n}{10^{x_i}a_i}$&lt;/p&gt;
&lt;p&gt;where, $x_i = \sum_{j=i+1}^{n}{p_{j}}$&lt;/p&gt;
&lt;p&gt;as $10^x\equiv 1 \text{ (mod 9)}$&lt;/p&gt;
&lt;p&gt;hence , $10^x a\equiv a \text{ (mod 9)}$&lt;/p&gt;
&lt;p&gt;$\therefore M\equiv\sum_{i=1}^{n}{10^{x_i}a_i}\equiv\sum_{i=1}^{n}{a_i} \text{ (mod 9)}$&lt;/p&gt;
&lt;p&gt;Now in this problem we can say that $A\equiv\sum_{i=1}^{100}{i} \text{ (mod 9)}$&lt;/p&gt;
&lt;p&gt;$\Longrightarrow A\equiv 100 \text{ (mod 9)}$ [as $\sum_{i=1}^{99}{i} \equiv 0 \text{ (mod 9)}$]&lt;/p&gt;
&lt;p&gt;$\Longrightarrow A\equiv \textcolor{red}{\boxed{1}} \text{ (mod 9)}$&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$122333444455555666666&amp;hellip;10000000001000000000&amp;hellip;1000000000$ কে $3$ দিয়ে ভাগ করলে ভাগশেষ কত থাকবে?
&lt;strong&gt;সোর্সঃ BDMO regional 2015&lt;/strong&gt;

&lt;div class=&#34;spoiler panel panel-default&#34;&gt;
&lt;div class=&#39;spoiler_block&#39;&gt;
      
        
      
&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-in spoiler_block_show&#39;&gt;
hint
&lt;/a&gt;

&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-out spoiler_block_hide&#39; style=&#39;display: none;&#39;&gt;
click to hide
&lt;/a&gt;

&lt;div class=&#39;spoiler_block_content&#39; style=&#39;display: none;&#39;&gt;
&lt;p&gt;.&lt;/p&gt;
&lt;p&gt;আগের সমস্যার সমাধান দেখে নিজে চেষ্টা করো ।&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;some-programming-related-problems&#34;&gt;Some programming related problems:&lt;/h2&gt;
&lt;p&gt;অনেক হয়ে গেলো শুধুমাত্র ম্যাথ নিয়ে সমস্যা । এখন কিছু প্রোগ্রামিং নিয়েও সমস্যা দেখা যাক ।&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;আমাদের $3$ টা পূর্নসংখ্যা দেওয়া আছে $p,q,m$ যেখানে $0\le p,q \le 10^9$ এবং $1\le m \le 10^9$ । আমাদেরকে $pq \text{ (mod m)}$ এর মান প্রিন্ট করতে হবে ।

&lt;div class=&#34;spoiler panel panel-default&#34;&gt;
&lt;div class=&#39;spoiler_block&#39;&gt;
      
        
      
&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-in spoiler_block_show&#39;&gt;
hint
&lt;/a&gt;

&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-out spoiler_block_hide&#39; style=&#39;display: none;&#39;&gt;
click to hide
&lt;/a&gt;

&lt;div class=&#39;spoiler_block_content&#39; style=&#39;display: none;&#39;&gt;
&lt;p&gt;.&lt;/p&gt;
&lt;p&gt;$p,q$ যেহেতু $10^9$ পর্যন্ত হতে পারে , তাই এদের গুণফল $10^{18}$ পর্যন্ত হয়ে যেতে পারে । তাই এই ভ্যারিয়েবল গুলো &lt;code&gt;long long&lt;/code&gt; টাইপের নিতে তবে ( অথবা &lt;code&gt;long long&lt;/code&gt; এ টাইপকাস্ট করে নিতে হবে )&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;




  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;1&#34; type=&#34;checkbox&#34;  /&gt;
    &lt;label for=&#34;1&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;cpp&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__title&#34;&gt;Really cool snippet&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-cpp&#34; &gt;&lt;code id=&#34;code1&#34;&gt;
int main() {
  long long p, q;
  int m;
  scanf(&amp;#34;%lld %lld %d&amp;#34;, &amp;amp;p, &amp;amp;q, &amp;amp;m);
  printf(&amp;#34;%lld\n&amp;#34;, (p * q) % m);
  return 0;
}&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;এখন আগের প্রবলেমেই রেঞ্জটা একটু চেঞ্জ করে দিলে কেমন হয়? $0\le p,q \le 10^{18}$ এবং $1\le m \le 10^9$

&lt;div class=&#34;spoiler panel panel-default&#34;&gt;
&lt;div class=&#39;spoiler_block&#39;&gt;
      
        
      
&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-in spoiler_block_show&#39;&gt;
hint
&lt;/a&gt;

&lt;a href=&#39;#&#39; class=&#39;spoiler-block-icon spoiler-block-icon-zoom-out spoiler_block_hide&#39; style=&#39;display: none;&#39;&gt;
click to hide
&lt;/a&gt;

&lt;div class=&#39;spoiler_block_content&#39; style=&#39;display: none;&#39;&gt;
&lt;p&gt;.&lt;/p&gt;
&lt;p&gt;$p,q$ যেহেতু $10^{18}$ পর্যন্ত হতে পারে , তাই এটি আগের পদ্ধতিতে সল্ভ করা যাবে না , কাড়ন  এদের গুণফল $10^{36}$ পর্যন্ত হয়ে যেতে পারে এবং এই রেঞ্জের কোন ভ্যারিয়েবল c++ এ নাই।
যদি $p\equiv a \text{ (mod m)}$ এবং $q\equiv b \text{ (mod m)}$ হয় , তাহলে আমরা বলতে পারি $pq\equiv ab \text{ (mod m)} \Longrightarrow pq\equiv {(p\text{ (mod m)})\times(q\text{ (mod m)})} \text{ (mod m)}$&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;




  &lt;div class=&#34;collapsable-code&#34;&gt;
    &lt;input id=&#34;2&#34; type=&#34;checkbox&#34;  /&gt;
    &lt;label for=&#34;2&#34;&gt;
      &lt;span class=&#34;collapsable-code__language&#34;&gt;cpp&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__title&#34;&gt;Really cool snippet&lt;/span&gt;
      &lt;span class=&#34;collapsable-code__toggle&#34; data-label-expand=&#34;Show&#34; data-label-collapse=&#34;Hide&#34;&gt;&lt;/span&gt;
    &lt;/label&gt;
    &lt;pre class=&#34;language-cpp&#34; &gt;&lt;code id=&#34;code2&#34;&gt;
int main() {
  long long p, q;
  int m;
  scanf(&amp;#34;%lld %lld %d&amp;#34;, &amp;amp;p, &amp;amp;q, &amp;amp;m);
  p%=m;
  q%=m;
  printf(&amp;#34;%lld\n&amp;#34;, (p * q) % m);
  return 0;
}&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://matholympiad.org.bd/resources/all-questions&#34;&gt;BDMO questions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>Showcase</title>
      <link>https://st3inum.github.io/showcase/</link>
      <pubDate>Wed, 18 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://st3inum.github.io/showcase/</guid>
      <description>Header 2 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam nec interdum metus. Aenean rutrum ligula sodales ex auctor, sed tempus dui mollis. Curabitur ipsum dui, aliquet nec commodo at, tristique eget ante. Donec quis dolor nec nunc mollis interdum vel in purus. Sed vitae leo scelerisque, sollicitudin elit sed, congue ante. In augue nisl, vestibulum commodo est a, tristique porttitor est. Proin laoreet iaculis ornare. Nullam ut neque quam.</description>
      <content>&lt;h2 id=&#34;header-2&#34;&gt;Header 2&lt;/h2&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam nec interdum metus. Aenean rutrum ligula sodales ex auctor, sed tempus dui mollis. Curabitur ipsum dui, aliquet nec commodo at, tristique eget ante. &lt;strong&gt;Donec quis dolor nec nunc mollis interdum vel in purus&lt;/strong&gt;. Sed vitae leo scelerisque, sollicitudin elit sed, congue ante. In augue nisl, vestibulum commodo est a, tristique porttitor est. Proin laoreet iaculis ornare. Nullam ut neque quam.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Fusce pharetra suscipit orci nec tempor. Quisque vitae sem sit amet sem mollis consequat. Sed at imperdiet lorem. Vestibulum pharetra faucibus odio, ac feugiat tellus sollicitudin at. Pellentesque varius tristique mi imperdiet dapibus. Duis orci odio, sodales lacinia venenatis sit amet, feugiat et diam.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;header-3&#34;&gt;Header 3&lt;/h3&gt;
&lt;p&gt;Nulla libero turpis, lacinia vitae cursus ut, auctor dictum nisl. Fusce varius felis nec sem ullamcorper, at convallis nisi vestibulum. Duis risus odio, porta sit amet placerat mollis, tincidunt non mauris. Suspendisse fringilla, &lt;code&gt;odio a dignissim pharetra&lt;/code&gt;, est urna sollicitudin urna, eu scelerisque magna ex vitae tellus.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/* PostCSS code */&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;pre&lt;/span&gt; {
  &lt;span style=&#34;color:#66d9ef&#34;&gt;background&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;#1a1a1d&lt;/span&gt;;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;padding&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;border-radius&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;font-size&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;rem&lt;/span&gt;;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;overflow&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;auto&lt;/span&gt;;

  &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@media&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;(--phone)&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;white-space&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;pre&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;wrap&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;word-wrap&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;break-word&lt;/span&gt;;
  }

  &lt;span style=&#34;color:#f92672&#34;&gt;code&lt;/span&gt; {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;background&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;none&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;!important&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;color&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;#ccc&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;padding&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;font-size&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;inherit&lt;/span&gt;;
  }
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// JS code
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;menuTrigger&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;querySelector&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.menu-trigger&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;menu&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;querySelector&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.menu&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mobileQuery&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getComputedStyle&lt;/span&gt;(document.&lt;span style=&#34;color:#a6e22e&#34;&gt;body&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;getPropertyValue&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;--phoneWidth&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;isMobile&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; () =&amp;gt; window.&lt;span style=&#34;color:#a6e22e&#34;&gt;matchMedia&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;mobileQuery&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;matches&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;isMobileMenu&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; () =&amp;gt; {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;menuTrigger&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;classList&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;toggle&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hidden&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;isMobile&lt;/span&gt;())
  &lt;span style=&#34;color:#a6e22e&#34;&gt;menu&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;classList&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;toggle&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hidden&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;isMobile&lt;/span&gt;())
}

&lt;span style=&#34;color:#a6e22e&#34;&gt;isMobileMenu&lt;/span&gt;()

&lt;span style=&#34;color:#a6e22e&#34;&gt;menuTrigger&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;addEventListener&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;click&amp;#39;&lt;/span&gt;, () =&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;menu&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;classList&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;toggle&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hidden&amp;#39;&lt;/span&gt;))

window.&lt;span style=&#34;color:#a6e22e&#34;&gt;addEventListener&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;resize&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;isMobileMenu&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- HTML code --&amp;gt;&lt;/span&gt;

&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;main&amp;#34;&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
   &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;&amp;gt;{{ .Title }}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;
    {{ range .Pages }}
      {{ .Render &amp;#34;summary&amp;#34;}}
    {{ end }}
  &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;section&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;header-4&#34;&gt;Header 4&lt;/h4&gt;
&lt;p&gt;Curabitur scelerisque felis viverra varius scelerisque. Ut enim libero, molestie gravida blandit at, mollis ornare tellus. Cras arcu mi, ultrices vel pulvinar vel, volutpat eu tortor. Nullam nec eros quis massa ultrices iaculis sed in metus. Praesent sollicitudin sem sit amet orci tempor gravida.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Maecenas elementum vitae nibh vitae porttitor.&lt;/li&gt;
&lt;li&gt;Aenean consequat, risus ut cursus placerat, arcu nulla sodales risus, ut molestie tellus tellus et dui.&lt;/li&gt;
&lt;li&gt;Integer imperdiet turpis vitae lacus imperdiet, ut ornare ligula auctor. Integer in mi eu velit vehicula suscipit eget vulputate nulla.&lt;/li&gt;
&lt;li&gt;Etiam vitae enim quis velit lobortis placerat a ut sem.
&lt;ul&gt;
&lt;li&gt;Curabitur lobortis ante sit amet orci pulvinar, sollicitudin viverra nunc accumsan.&lt;/li&gt;
&lt;li&gt;Praesent fermentum orci quis leo facilisis posuere.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Aliquam erat volutpat. In hac habitasse platea dictumst. Nunc ut tincidunt mauris. Sed at gravida risus, id semper magna. Nullam vitae enim mattis, sodales neque non, pharetra elit. Cras sit amet sagittis augue, et finibus turpis. Ut tempus tincidunt diam vel pharetra. Nulla porttitor odio sit amet nulla scelerisque, quis aliquam mi imperdiet. Sed tincidunt dui vel tellus vestibulum rhoncus. Donec tempus ultrices velit.&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
